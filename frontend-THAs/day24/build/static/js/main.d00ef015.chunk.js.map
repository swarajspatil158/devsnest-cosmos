{"version":3,"sources":["components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","name","email","password","details","setDetails","onSubmit","e","preventDefault","className","htmlFor","type","id","onChange","target","value","App","adminUser","user","setUser","setError","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAgCeA,MA9Bf,YAAoC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACvB,EAA8BC,mBAAS,CAACC,KAAK,GAAIC,MAAM,GAAIC,SAAU,KAArE,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACI,uBAAMC,SALa,SAAAC,GACnBA,EAAEC,iBACFV,EAAMM,IAGN,UACI,sBAAKK,UAAW,aAAhB,UACA,wCACW,IAATV,EAAgB,qBAAKU,UAAU,QAAf,SAAwBV,IAAc,MAExD,sBAAKU,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOV,KAAK,OAAOW,GAAG,OAAOC,SAAU,SAAAN,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAaH,KAAKM,EAAEO,OAAOC,UAAUA,MAAOX,EAAQH,UAE1H,sBAAKQ,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,oBACA,uBAAOC,KAAK,OAAOV,KAAM,QAAQW,GAAK,QAAQC,SAAU,SAAAN,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAaF,MAAMK,EAAEO,OAAOC,UAAUA,MAAOX,EAAQF,WAEhI,sBAAKO,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,WAAWV,KAAK,WAAWW,GAAK,WAAWC,SAAU,SAAAN,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAaD,SAASI,EAAEO,OAAOC,UAAUA,MAAOX,EAAQD,cAE5I,uBAAOQ,KAAK,SAASI,MAAM,cCwBxBC,MA7Cf,WACE,IAAMC,EACG,kBADHA,EAEM,QAIZ,EAAsBjB,mBAAS,CAACC,KAAK,GAAIC,MAAO,KAAhD,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAA0BnB,mBAAS,IAAnC,mBAAOD,EAAP,KAAcqB,EAAd,KAuBA,OACE,qBAAKX,UAAU,MAAf,SACuB,IAAdS,EAAKhB,MACL,sBAAKO,UAAU,UAAf,UACE,2CAAa,+BAAOS,EAAKjB,UACzB,wBAAQoB,QATN,WACdF,EAAQ,CAAClB,KAAM,GAAIC,MAAO,MAQd,uBAGF,cAAC,EAAD,CAAWJ,MA7BR,SAAAM,GACZkB,QAAQC,IAAInB,GAETA,EAAQF,OAASe,GAAmBb,EAAQD,UAAYc,GAC1DK,QAAQC,IAAI,aACbJ,EAAQ,CACNlB,KAAKG,EAAQH,KACbC,MAAME,EAAQF,SAKdkB,EAAS,yBAiBuBrB,MAASA,OCjChCyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d00ef015.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nfunction LoginForm({Login, error}) {\n    const [details, setDetails] = useState({name:\"\", email:\"\", password: \"\"});\n\n    const submitHandeler = e =>{\n        e.preventDefault();\n        Login(details)\n    }\n    return (\n        <form onSubmit={submitHandeler}>\n            <div className= \"form-inner\">\n            <h2>Login:</h2>\n            {(error != \"\") ? (<div className=\"error\">{error}</div>):\"\"}\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name:</label>\n                <input type=\"text\" name=\"name\" id=\"name\" onChange={e => setDetails({...details,name:e.target.value })} value={details.name}  />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                <input type=\"text\" name =\"email\" id = \"email\" onChange={e => setDetails({...details,email:e.target.value })} value={details.email}/>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"password\">Password:</label>\n                <input type=\"password\" name=\"password\" id = \"password\" onChange={e => setDetails({...details,password:e.target.value })} value={details.password} />\n            </div>\n            <input type=\"submit\" value=\"LOGIN\" />\n        </form>\n    )\n}\n\nexport default LoginForm\n","import { div } from \"prelude-ls\";\nimport React,{useState} from \"react\";\nimport LoginForm from \"./components/LoginForm\";\n\n\n\nfunction App() {\n  const adminUser ={\n    email: \"admin@admin.com\",\n    password: \"admin\"\n\n  }\n\n  const [user,setUser]= useState({name:\"\", email: \"\"})\n  const [error, setError] = useState(\"\");\n\n  const Login = details => {\n    console.log(details);\n    \n    if(details.email == adminUser.email && details.password == adminUser.password)\n    {console.log(\"Logged in\");\n    setUser({\n      name:details.name,\n      email:details.email\n    })\n  \n  }\n    else{\n      setError(\"deatils do not match\")\n    }\n  }\n\n\n  const Logout = () => {\n   setUser({name: \"\", email: \"\"});\n  }  \n\n  return (\n    <div className=\"App\">\n           {(user.email != \"\")?(\n             <div className=\"welcome\">\n               <h2>Welcome, <span>{user.name}</span></h2>\n               <button onClick={Logout}>Logout</button>\n               </div>\n           ):(\n             <LoginForm Login={Login} error = {error}/>\n           )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}