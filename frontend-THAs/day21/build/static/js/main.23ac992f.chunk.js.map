{"version":3,"sources":["List.js","CalorieCard.js","App.js","index.js"],"names":["list","CalorieCard","name","calorie","update","className","onClick","filter","item","foodName","App","useState","newFood","setNewFood","newCalorie","setNewCalorie","CalorieList","updateList","placeholder","onChange","e","value","target","type","alert","ele","food","callories","temp","map","calories","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oKAQeA,G,MARJ,CACT,CAAC,SAAW,QAAS,SAAW,OAAQ,QAAU,UAAW,SAAW,IACxE,CAAC,SAAW,SAAU,SAAW,OAAQ,QAAU,UAAW,SAAW,KACzE,CAAC,SAAW,OAAQ,SAAW,OAAQ,QAAU,YAAa,SAAW,IACzE,CAAC,SAAW,YAAa,SAAW,OAAQ,QAAU,YAAa,SAAW,IAC9E,CAAC,SAAW,SAAU,SAAW,OAAQ,SAAW,IACpD,CAAC,SAAW,SAAU,SAAW,QAAS,SAAW,M,OCUxCC,MAdf,YAAqD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASH,EAAe,EAAfA,KAAMI,EAAS,EAATA,OAKzC,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBH,IACvB,sBAAKG,UAAU,WAAf,sBAAoCF,EAApC,eACA,qBAAKE,UAAU,SAASC,QARN,WACpBF,EAAOJ,EAAKO,QAAO,SAAAC,GAAI,OAAIA,EAAKC,WAAaP,OAO3C,sBCkDSQ,MAxDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,EAA2BJ,mBAASK,GAApC,mBAAOhB,EAAP,KAAaiB,EAAb,KAuBA,OACE,sBAAKZ,UAAU,eAAf,UACG,uBACCa,YAAY,WACZC,SAAU,SAAAC,GAAC,OA1BKC,EA0BaD,EAAEE,OAAOD,WAzB1CR,EAAWQ,GADS,IAAAA,GA2BhBA,MAAOT,IAET,uBACEM,YAAY,cACZC,SAAU,SAAAC,GAAC,OA3BKC,EA2BaD,EAAEE,OAAOD,WA1B1CN,EAAcM,GADM,IAAAA,GA4BhBA,MAAOP,EACPS,KAAK,WAEP,wBAAQjB,QA3BS,WACnB,GAAgB,KAAZM,GAAiC,KAAfE,EACpBU,MAAM,qBACD,CACL,IAAIC,EAAM,CACRC,KAAMd,EACNe,UAAWb,GAETc,EAAI,sBAAO5B,GAAP,CAAayB,IACrBR,EAAWW,GACXb,EAAc,IACdF,EAAW,MAgBX,oBAEEb,EAAK6B,KAAI,SAAArB,GACP,OAAO,cAAC,EAAD,CAELN,KAAMM,EAAKC,SACXN,QAASK,EAAKsB,SACd9B,KAAMA,EACNI,OAAQa,GAJHT,EAAKC,iBC5ChBsB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.23ac992f.chunk.js","sourcesContent":["let list = [\n  {\"foodName\":\"Pizza\", \"foodType\":\"junk\", \"protein\":\"chicken\", \"calories\":55},\n  {\"foodName\":\"Burger\", \"foodType\":\"junk\", \"protein\":\"chicken\", \"calories\":100},\n  {\"foodName\":\"Roti\", \"foodType\":\"desi\", \"protein\":\"somewhere\", \"calories\":59},\n  {\"foodName\":\"Dahi Vada\", \"foodType\":\"desi\", \"protein\":\"somewhere\", \"calories\":37},\n  {\"foodName\":\"Samosa\", \"foodType\":\"desi\", \"calories\":63},\n  {\"foodName\":\"Jalebi\", \"foodType\":\"sweet\", \"calories\":44}\n]\nexport default list","\n\nfunction CalorieCard({name, calorie, list, update}) {\n  const deleteElement = () => {\n    update(list.filter(item => item.foodName !== name))\n  }\n  \n  return (\n    <div className=\"calorie-card\">\n      <div className=\"name\">{name}</div>\n      <div className=\"calories\">Contains {calorie} calories</div>\n      <div className=\"delete\" onClick={deleteElement}>drop</div>\n    </div>\n  );\n}\n\nexport default CalorieCard;","import './App.css';\nimport CalorieList from './List';\nimport CalorieCard from './CalorieCard';\nimport {useState} from \"react\";\n\nfunction App() {\n  const [newFood, setNewFood] = useState('');\n  const [newCalorie, setNewCalorie] = useState('');\n\n  const [list, updateList] = useState(CalorieList)\n  const handleAddFood = value => {\n    setNewFood(value);\n  };\n\n  const handleCalorie = value => {\n    setNewCalorie(value);\n  };\n\n  const handleSubmit = () => {\n    if (newFood === '' || newCalorie === '') {\n      alert('Add something');\n    } else {\n      let ele = {\n        food: newFood,\n        callories: newCalorie\n      };\n      let temp = [...list, ele];\n      updateList(temp);\n      setNewCalorie('');\n      setNewFood('');\n    }\n  };\n  return (\n    <div className=\"calorie-list\">\n       <input\n        placeholder=\"Add Food\"\n        onChange={e => handleAddFood(e.target.value)}\n        value={newFood}\n      />\n      <input\n        placeholder=\"Add Calorie\"\n        onChange={e => handleCalorie(e.target.value)}\n        value={newCalorie}\n        type=\"number\"\n      />\n      <button onClick={handleSubmit}>Submit</button>\n      {\n        list.map(item => {\n          return <CalorieCard\n            key={item.foodName}\n            name={item.foodName}\n            calorie={item.calories}\n            list={list}\n            update={updateList}\n          />\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}